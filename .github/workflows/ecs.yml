name: Deploy to Amazon ECS
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY }}:${{ github.sha }} .

      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}

      - name: Deploy to ECS using ecs-deploy Docker container
        run: |
          docker run --rm \
            -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            -e AWS_REGION=${{ vars.AWS_REGION }} \
            -e ECS_CLUSTER=${{ secrets.ECS_CLUSTER }} \
            -e ECS_SERVICE_NAME=${{ secrets.ECS_SERVICE_NAME }} \
            -e ECR_REPOSITORY=${{ secrets.ECR_REPOSITORY }} \
            -e GITHUB_SHA=${{ github.sha }} \
            --entrypoint /bin/bash \
            ghcr.io/marcelovicentegc/ecs-deploy:latest \
            -c "ecs-deploy --cluster $ECS_CLUSTER --service-name $ECS_SERVICE_NAME --image $ECR_REPOSITORY:$GITHUB_SHA --region $AWS_REGION --force-new-deployment"
